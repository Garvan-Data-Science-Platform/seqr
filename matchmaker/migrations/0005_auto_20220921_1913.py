# Generated by Django 3.2.14 on 2022-09-21 19:13

from django.db import migrations, models
import django.db.models.deletion
from tqdm import tqdm


def _is_match(sv, variant_json):
    return sv.variant_id == '{referenceName}-{start}-{referenceBases}-{alternateBases}'.format(**variant_json)


def update_mme_variant_links(apps, schema_editor):
    SavedVariant = apps.get_model('seqr', 'SavedVariant')
    MatchmakerSubmission = apps.get_model('matchmaker', 'MatchmakerSubmission')
    MatchmakerSubmissionGenes = apps.get_model('matchmaker', 'MatchmakerSubmissionGenes')
    db_alias = schema_editor.connection.alias

    gene_submissions = MatchmakerSubmission.objects.using(db_alias).filter(genomic_features__isnull=False)
    if not gene_submissions:
        return
    print(f'Migrating variants for {len(gene_submissions)} submissions')

    submissions_by_family = defaultdict(list)
    for s in gene_submissions.prefetch_related('individual'):
        submissions_by_family[s.individual.family_id].append(s)

    variants_by_family = defaultdict(list)
    for sv in SavedVariant.objects.using(db_alias).filter(family_id__in=submissions_by_family.keys()):
        variants_by_family[sv.family_id].append(sv)

    models = []
    for family_id, submissions in tqdm(submissions_by_family.items()):
        for submission in submissions:
            for f in submission.genomic_features:
                variant_models = [sv for sv in variants_by_family[family_id] if _is_match(sv, f['variant'])]
                if not variant_models:
                    raise Exception(f'No variant matches found for {submission.guid} - {json.dumps(f["variant"])}')
                if len(variant_models) > 1:
                    svs = ', '.join([sv.guid for sv in variant_models])
                    raise Exception(
                        f'Multiple variant matches found for {submission.guid} - {json.dumps(f["variant"])}: {svs}')

                variant = variant_models[0]
                variant.matchmaker_submission = submission
                models.append(MatchmakerSubmissionGenes(
                    matchmaker_submission=submission,
                    saved_variant=variant_models[0],
                    gene_id=f['gene']['id'],
                ))

    MatchmakerSubmissionGenes.objects.using(db_alias).bulk_create(models)
    print('Done')


class Migration(migrations.Migration):

    dependencies = [
        ('seqr', '0047_auto_20220908_1851'),
        ('matchmaker', '0004_alter_matchmakersubmission_individual'),
    ]

    operations = [
        migrations.CreateModel(
            name='MatchmakerSubmissionGenes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene_id', models.CharField(max_length=20)),
                ('matchmaker_submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='matchmaker.matchmakersubmission')),
                ('saved_variant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seqr.savedvariant')),
            ],
        ),
        migrations.RunPython(update_mme_variant_links, reverse_code=migrations.RunPython.noop),
        migrations.RemoveField(
            model_name='matchmakersubmission',
            name='genomic_features',
        ),
    ]
